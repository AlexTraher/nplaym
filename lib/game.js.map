{"version":3,"sources":["../src/game.js"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["import { HEIGHT, WIDTH, LEFTWALL, RIGHTWALL, MIDWIDTH, MIDHEIGHT, FPS, FRAMERATE, DIFFICULTY, STARTTIME, PLAYERLINE } from './constants.js';\nimport term from 'node-terminal';\nimport { Monster, Bullet } from './classes.js';\nimport { writeCentre, paintScreen, startSequence } from './display.js';\nimport { installingPackages } from './io.js';\n\nlet SCORE = 0; \nlet ALIVE = true;\nlet LOOP;\n\nconst gameState = [{\n  type: 'player',\n  s: '^',\n  up: PLAYERLINE,\n  left: MIDWIDTH,\n  colour: 'blue'\n}];\n\nconst player = gameState[0];\n\nfunction checkBullet(line, entities) {\n  const bullets = entities.filter(i => i.type === 'bullet');\n  const mobs = entities.filter(i => i.type === 'mob');\n  const bulletsToGo = [];\n  bullets.forEach((bullet, bi) => {\n    // console.log(item.left, dangerZone)\n    mobs.forEach((mob, mi) => {\n      if (intersects(bullet.left, mob.dangerZone) && !bullet.dead && !mob.dead) {\n        bullet.dead = true;\n        bullet.colour = 'black';\n        mob.s = 'x'.repeat(mob.s.length);\n        mob.dead = true;\n        mob.colour = 'yellow';\n      }\n    })\n  })\n} \n\nfunction checkIntersects (line, entities) {\n  const playerPos = entities.find(item => item.type === 'player').left;\n  const mobs = entities.filter(i => i.type === 'mob');\n  const dangerZone = [];\n  mobs.forEach(mob => {\n    if (intersects(playerPos, mob.dangerZone) && !mob.dead) {\n      ALIVE = false;\n      setTimeout(gameOver, 1000)\n    }\n  });\n}\n\nfunction gameOver (win) {\n  if (win) {\n    writeCentre(`You win! Packages installed! Your score was ${SCORE}.`);\n  } else {\n    writeCentre(`You lose! Give up, go home, and sell your keyboard on ebay.\\nNo packages have been installed but then I'm sure you've got used to failure by now.\\n\\nYour score was ${SCORE}.`);\n  }\n  process.exit(0);\n}\n\nfunction intersects (pos, dangerZone) {\n  if (dangerZone.indexOf(pos) !== -1 ) {\n    return true;\n  }\n  return false;\n}\n\nfunction generateScene () {\n  const packages = Object.keys(installingPackages);\n  if (packages.length > 0 && (Math.random() * 100) < DIFFICULTY) {\n    const lastMsg = packages.pop();\n    gameState.push(new Monster(lastMsg));\n  }\n}\n\nfunction setScore () {\n  SCORE = new Date().getTime() - STARTTIME;\n}\n\nfunction startGame () {\n  startSequence().then(() => {\n    LOOP = setInterval(runLoop, FRAMERATE);\n  })\n}\n\nfunction fire () {\n  gameState.push(new Bullet(player.left));\n}\n\nfunction runLoop () {\n  if (ALIVE) {\n    // term.clear();\n    generateScene();\n    paintScreen();\n  }\n};\n\nexport { gameState, checkIntersects, checkBullet, SCORE, setScore, startGame, fire, player };"]}